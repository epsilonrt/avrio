# Hey Emacs, this is a -*- makefile -*-
#----------------------------------------------------------------------------
# $Id$

# Nom du fichier cible (sans extension).
TARGET = test_template

# Normalement le MCU est défini dans board.mk ... Il est possible de le modifier
# dans le cas où le modèle implanté (cas des cartes avec support) ne correspond
# pas.
# MCU = atmega32

# Normalement F_CPU est définie dans board.mk ... Il est possible de la modifier
# dans le cas où la fréquence n'est pas fixée par un quartz (horloge interne...)
# F_CPU = 8000000

#----------------------------------------------------------------------------
#                               ~~~~AVRIO~~~~
# Chemin relatif du répertoire racine d'AVRIO
AVRIO_TOPDIR = ..

# Nom de la carte cible (voir le fichier board/board.mk pour la liste)
# Si BOARD est vide, il faut un fichier board.mk pour définir les propriétés de
# la carte dans le répertoire où se trouve ce Makefile !
BOARD = MAVRIX
#BOARD = DMNET_SERVER_IHM
#BOARD = DMNET_HUB
#BOARD = DMNET_STK200
#BOARD = STK200
#BOARD = DVK90CAN1

# Configuration de AvrIO
# -------------------------------
AVRIO_CONFIG  = 

# Valide le noyau multitâche temps réel AVRX (sous forme de bibliothèque)
AVRX = OFF
#                               ~~~~AVRIO~~~~
#----------------------------------------------------------------------------

#----------------------------------------------------------------------------
#                                ~~~~CMG~~~~
# Chemin relatif du répertoire racine de CMG
CMG_TOPDIR = $(AVRIO_TOPDIR)/src/cmg/Source

# Plateforme d'exécution
CMG_PLATFORM = CMG_PLATFORM_AVR

# Configuration de CMG
# -------------------------------
# Use only _ONE_ of this list:
#CMG_CONFIG  = CMG_CTRL_T6963
CMG_CONFIG  = CMG_CTRL_LH155

# Select RawAccess mode for fonts
# -------------------------------
# Use only _ONE_ of this list:
#CMG_CONFIG += CMG_TEXT_FONTRAWACCESS_RAM
CMG_CONFIG += CMG_TEXT_FONTRAWACCESS_AVRFLASH

#                                ~~~~CMG~~~~
#----------------------------------------------------------------------------

# Niveau d'optimisation de GCC =  [0, 1, 2, 3, s].
#     0 = pas d'optimisation (pour debug).
#     s = optimisation de la taille du code (pour release).
#     (Note: 3 n'est pas toujours le meilleur niveau. Voir la FAQ avr-libc.)
OPT = s

# Liste des fichiers source C. (Les dépendances sont automatiquement générées.)
# Le chemin d'accès des fichiers sources systèmes a été ajouté au chemin de 
# recherche du compilateur, il n'est donc pas nécessaire de préciser le chemin 
# d'accès complet du fichier mais seulement le nom du projet (avrio, avrx, ...)
SRC = $(TARGET).c

# Liste des fichiers source C++. (Les dépendances sont automatiquement générées.)
# Le chemin d'accès des fichiers sources systèmes a été ajouté au chemin de 
# recherche du compilateur, il n'est donc pas nécessaire de préciser le chemin 
# d'accès complet du fichier mais seulement le nom du projet (avrio, avrx, ...)
CPPSRC =

# Liste des fichiers source assembleur
#   L'extenson doit toujours être .S (en majuscule). En effet, les fichiers .s
#   ne sont pas consédérés comme des fichiers sources mais comme des fichiers
#   générés par le compilateur et seront supprimés lors d'un make clean.
#   Cela est valable aussi sous DOS/Windows (bien que le système d'exploitation
#   ne soit pas sensible à la casse).
ASRC =

# Place -D or -U options here for C sources
CDEFS = 

# Place -D or -U options here for ASM sources
ADEFS = 

# Place -D or -U options here for C++ sources
CPPDEFS = 

# List any extra directories to look for include files here.
#     Each directory must be seperated by a space.
#     Use forward slashes for directory separators.
#     For a directory that has spaces, enclose it in quotes.
EXTRAINCDIRS = 

#---------------- Library Options ----------------
# List any extra directories to look for libraries here.
#     Each directory must be seperated by a space.
#     Use forward slashes for directory separators.
#     For a directory that has spaces, enclose it in quotes.
EXTRALIBDIRS = 

# List any extra libraries here.
#     Each library must be seperated by a space.
EXTRALIBS = 

# STANDARD, MIN or FLOAT
PRINTF_VERSION = STANDARD

# STANDARD, MIN or FLOAT
SCANF_VERSION = STANDARD

# ON/OFF
MATH_LIB_ENABLE = OFF

#---------------- Programming Options (avrdude) ----------------

# Programming hardware
# Type: avrdude -c ?
# to get a full listing.
#
AVRDUDE_PROGRAMMER = jtag2

# com1 = serial port. Use lpt1 to connect to parallel port.
AVRDUDE_PORT = usb 

# ON/OFF
AVRDUDE_WRITE_EEPROM_ENABLE = OFF

#---------------- Debugging Options ----------------

# Set the DEBUG_UI to either gdb or insight.
# DEBUG_UI = gdb
DEBUG_UI = insight

# Set the debugging back-end to either avarice, simulavr.
DEBUG_BACKEND = avarice
#DEBUG_BACKEND = simulavr

# When using avarice settings for the JTAG
JTAG_DEV = usb

#------------------------------------------------------------------------------
include $(AVRIO_TOPDIR)/script/common.mk 
