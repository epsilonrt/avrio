#----------------------------------------------------------------------------
# $Id$
#----------------------------------------------------------------------------
#!/bin/bash


# Valeurs par défaut se trouvant dans Makefile et board.mk
DEFAULT_PROJECT=avrio
DEFAULT_MCU=atmega328p
DEFAULT_FCPU=16000000
DEFAULT_AVRDUDE_PROGRAMMER=uno
DEFAULT_AVRDUDE_PORT=/dev/ttyACM0
DEFAULT_AVRDUDE_BAUDRATE=0

PROJECT=$DEFAULT_PROJECT
MCU=$DEFAULT_MCU
FCPU=$DEFAULT_FCPU
AVRDUDE_PROGRAMMER=$DEFAULT_AVRDUDE_PROGRAMMER
AVRDUDE_PORT=$DEFAULT_AVRDUDE_PORT
AVRDUDE_BAUDRATE=$DEFAULT_AVRDUDE_BAUDRATE

TEMP_NAME=template

AVRIO_ARCHIVE=avrio-project-template.tar.gz

ARDUINO_ARCHIVE=arduino-project-template.tar.gz
ARDUINO_BOARD=UNO

usage()
{
cat << EOF
usage: $(basename $0) [Options] project_name

Ce script permet de créer un nouveau projet AvrIO.

  project_name  nom du projet à créer.
OPTIONS:
  -h    Affiche ce message
  -t    type de projet à créer (avrio ou arduino)
        Valeur par défaut: $DEFAULT_PROJECT
  -p    modèle du microcontrôleur conforme à ceux indiqués par la commande
        avr-gcc --target-help (paragraphe Known MCU names)
        Valeur par défaut: $DEFAULT_MCU
  -F    fréquence d'horloge du MCU en Hz
        Valeur par défaut: $DEFAULT_FCPU
  -c    modèle de programmateur conforme à ceux indiqués par la commande
        avrdude -c ?
        Valeur par défaut: $DEFAULT_AVRDUDE_PROGRAMMER
  -P    port utilisé par le programmateur (dépend du programmateur utilisé et
        de la plate-forme de développement)
        Valeur par défaut: $DEFAULT_AVRDUDE_PORT
  -b    vitesse de la liaison série (uniquement si -P correspond à un port série)
        Valeur par défaut: Aucune
EOF
}

while getopts ":lht:p:F:c:P:b:" OPTION
do
  case $OPTION in
    h)
       usage
       exit 1
       ;;
    t)
      #echo "-t was triggered, Parameter: $OPTARG" >&2
      PROJECT=$OPTARG
      ;;
    p)
      #echo "-p was triggered, Parameter: $OPTARG" >&2
      MCU=$OPTARG
      ;;
    F)
      #echo "-F was triggered, Parameter: $OPTARG" >&2
      FCPU=$OPTARG
      ;;
    c)
      #echo "-c was triggered, Parameter: $OPTARG" >&2
      AVRDUDE_PROGRAMMER=$OPTARG
      ;;
    P)
      #echo "-P was triggered, Parameter: $OPTARG" >&2
      AVRDUDE_PORT=$OPTARG
      ;;
    b)
      #echo "-b was triggered, Parameter: $OPTARG" >&2
      AVRDUDE_BAUDRATE=$OPTARG
      ;;
    ?)
       usage
       exit
       ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

if [ $# -lt 1 ]
then
  usage
  exit 1
fi

NAME=$1

if [ -d ${NAME} ]; then
  echo "$NAME existe déjà !"
  exit 1
fi

case $PROJECT in
  avrio)
     ARCHIVE=$AVRIO_ARCHIVE
     ;;
  arduino)
     ARCHIVE=$ARDUINO_ARCHIVE
    ;;
  *)
     echo "$PROJECT: Type de projet inconnu !"
     exit 1
     ;;
esac

# Création dossier et desarchivage
echo "Création du projet $PROJECT: $NAME"
mkdir ${NAME} || exit 1
tar -C $NAME -xvzf $ARCHIVE > /dev/null || exit 1

cd ${NAME}

case $PROJECT in
  avrio)
    # efface la valeur de BOARD
    sed -i s/^BOARD.*=.*/BOARD\ =/g Makefile
    ;;
  arduino)
    # Modifie BOARD
    sed -i s/^BOARD.*=.*/BOARD\ =\ $ARDUINO_BOARD/g Makefile
    ;;
esac


if [ "_$TEMP_NAME" != "_$NAME" ]; then
  # echo "Renomme $TEMP_NAME en $NAME"
  for f in $(ls $TEMP_NAME*)
  do
    d=$(dirname $f)
    b=$(basename $f)
    n="${b%.*}"
    e="${b##*.}"
    # echo "mv $f $d/$NAME.$e"
    mv $f $d/$NAME.$e
  done

  # echo "Remplace toutes les occurrences de $TEMP_NAME..."
  for f in $(find -maxdepth 1 -type f)
  do
    # echo "sed -i s/$TEMP_NAME/$NAME/g $f"
    sed -i s/$TEMP_NAME/$NAME/g $f
  done
fi

if [ "_$MCU" != "_$DEFAULT_MCU" ]; then
  echo -e "\tModifie le MCU en $MCU"
  sed -i s/^MCU.*=.*/MCU\ =\ $MCU/ board.mk
fi

if [ $FCPU -ne $DEFAULT_FCPU ]; then
  echo -e "\tModifie FCPU en $FCPU"
  sed -i s/^F_CPU.*=.*/F_CPU\ =\ $FCPU/ board.mk
fi

if [ "_$AVRDUDE_PROGRAMMER" != "_$DEFAULT_AVRDUDE_PROGRAMMER" ]; then
  echo -e "\tModifie le programmateur en $AVRDUDE_PROGRAMMER"
  sed -i s/^AVRDUDE_PROGRAMMER.*/AVRDUDE_PROGRAMMER\ =\ $AVRDUDE_PROGRAMMER/ Makefile
fi

if [ "_$AVRDUDE_PORT" != "_$DEFAULT_AVRDUDE_PORT" ]; then
  echo -e "\tModifie le port en $AVRDUDE_PORT"
  sed -i s/^AVRDUDE_PORT.*/AVRDUDE_PORT\ =\ $AVRDUDE_PORT/ Makefile
fi

if [ $AVRDUDE_BAUDRATE -ne $DEFAULT_AVRDUDE_BAUDRATE ]; then
  echo -e "\tModifie le baudrate du port en $AVRDUDE_BAUDRATE"
  sed -i s/^\#AVRDUDE_BAUDRATE.*/AVRDUDE_BAUDRATE\ =\ $AVRDUDE_BAUDRATE/ Makefile
fi

echo "Tout c'est bien passé."
echo "Vous pouvez aller dans le dossier $NAME et tapez :"
echo "$ make"
echo "pour construire votre projet puis :"
echo "$ make program"
echo "pour programmer votre cible."

exit 0
